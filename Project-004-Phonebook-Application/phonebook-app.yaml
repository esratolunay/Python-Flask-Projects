AWSTemplateFormatVersion: 2010-09-09

Description: |
  CloudFormation Template for Phonebook Application. This template creates Application Load Balancer
  with Auto Scaling Group of Amazon Linux 2 (ami-090e0fc566929d98b) EC2 Instances which host Python Flask Web Application.
  EC2 instances are placed within WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup,
  and allows tcp(3306) connections only within itself. RDS DB instance is placed within WebServerSecurityGroup
  so that Database Server can communicate with Web Servers. Application Load Balancer is placed within ALBSecurityGroup
  which allows http (80) connections from anywhere. WebServerASG Auto Scaling Group is using the LT
  Launch Template in order to spin up instances needed. LT Launch Template is configured to prepare Python Flask
  environment on EC2, and to deploy Phonebook Application on Flask Server after downloading the app code
  from Github repository.
Parameters:

  VPC:
    Description: VPC Id of your existing account
    Type: AWS::EC2::VPC::Id
  
  KeyName:
    Description: Select your key-pair
    Type: AWS::EC2::KeyPair::KeyName
  
  Subnets:
    Description: Select subnet for ALB
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  Rds:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: phonebook-app
      DBName: clarusway_phonebook
      DBSecurityGroups: 
        - !Ref DBSecurityGroup
      Engine: MySQL
      EngineVersion: 8.0.28
      MasterUserPassword: clarusway_1234
      MasterUsername: admin
      Port: 3306
      PubliclyAccessible: true
  
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        - EC2SecurityGroupId: !GetAtt WebSecGroup.GroupId
        - CIDRIP: 0.0.0.0/0
      GroupDescription: Back-end Database # Required
  
  AutoScal:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemp
        Version: !GetAtt LaunchTemp.LatestVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !Ref TargetGroup
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer  # Required
      Port: 80
      Protocol: HTTP
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups: 
        - !GetAtt ALBSecGroup.GroupId
      Subnets: !Ref Subnets
      Type: application
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC
  
  LaunchTemp:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-090e0fc566929d98b
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !GetAtt  WebSecGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack
        UserData: 
          Fn::Base64:
            !Sub
              - |
                #! /bin/bash
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                TOKEN="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                FOLDER="https://$TOKEN@raw.githubusercontent.com/esratolunay/PhoneBook-Project/main/Project-004-Phonebook-Application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/app.py
              - MyDBURI: !GetAtt Rds.Endpoint.Address
  
  WebSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "This Security Group is for Instance and enabled 80 and 22 port." # Required
      GroupName: "Instance-Sec-Group"
      SecurityGroupIngress: 
       -  IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecGroup.GroupId
       -  IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0       
      VpcId: !Ref VPC

  
  ALBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "This Security Group is for ALB and enabled 80 port." # Required
      GroupName: "ALB-Sec-Group"
      SecurityGroupIngress: 
       -  IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
  
  
Outputs:
  WebsiteURL:
    Value: !Sub
      - http://${ALBAddress}
      - ALBAddress: !GetAtt LoadBalancer.DNSName
    Description: Phonebook Application Load Balancer URL